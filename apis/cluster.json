swagger: '2.0'
info:
  description: 'This documentation is for the Cluster resource for Red Hat Advanced Cluster Management for Kubernetes. Cluster resource has four possible requests: create, query, delete and update.'
  version: 1.0.0
  title: Clusters (clusterregistry.k8s.io) APIs
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
basePath: /kubernetes/apis
tags:
  - name: clusterregistry.k8s.io
    description: Create and manage clusters
schemes:
  - https
paths:
  '/clusterregistry.k8s.io/v1alpha1/namespaces/{namespace}/clusters':
    post:
      tags:
        - clusterregistry.k8s.io
      summary: Create a cluster
      description: Create a cluster.
      operationId: createCluster
      consumes:
        - cluster/yaml
      parameters:
        - in: body
          name: body
          description: Parameters describing the cluster to be created.
          required: true
          schema:
            $ref: '#/definitions/Cluster'
        - in: path
          name: namespace
          description: 'Namespace that you want to use, for example, cluster-namespace-1.'
          required: true
          type: string
        - name: COOKIE
          in: header
          description: 'Authorization: Bearer {ACCESS_TOKEN} ; ACCESS_TOKEN is the user access token.'
          type: string
          required: true
      responses:
        '200':
          description: Success
        '403':
          description: Access forbidden
        '404':
          description: Resource not found
        '500':
          description: Internal service error
        '503':
          description: Service unavailable
  '/clusterregistry.k8s.io/v1alpha1/clusters':
    get:
      tags:
        - clusterregistry.k8s.io
      summary: Query all clusters
      description: Query your clusters for more details.
      operationId: queryClusters
      consumes:
        - cluster/yaml
      parameters:
        - name: COOKIE
          in: header
          description: 'Authorization: Bearer {ACCESS_TOKEN} ; ACCESS_TOKEN is the user access token.'
          type: string
          required: true
      responses:
        '200':
          description: Success
        '403':
          description: Access forbidden
        '404':
          description: Resource not found
        '500':
          description: Internal service error
        '503':
          description: Service unavailable
  '/clusterregistry.k8s.io/v1alpha1/namespaces/{namespace}/clusters/{cluster_name}':
    get:
      tags:
        - clusterregistry.k8s.io
      summary: Query a single cluster
      description: Query a single cluster for more details.
      operationId: queryCluster
      parameters:
        - name: cluster_name
          in: path
          description: Name of the cluster that you wan to query.
          required: true
          type: string
        - in: path
          name: namespace
          description: 'Namespace that you want to use, for example, cluster-namespace-1.'
          required: true
          type: string
        - name: COOKIE
          in: header
          description: 'Authorization: Bearer {ACCESS_TOKEN} ; ACCESS_TOKEN is the user access token.'
          type: string
          required: true
      responses:
        '200':
          description: Success
        '403':
          description: Access forbidden
        '404':
          description: Resource not found
        '500':
          description: Internal service error
        '503':
          description: Service unavailable
    delete:
      tags:
        - clusterregistry.k8s.io
      summary: Delete a cluster
      description: 'Delete a single cluster'
      operationId: deleteCluster
      parameters:
        - name: cluster_name
          in: path
          description: Name of the cluster that you want to delete.
          required: true
          type: string
        - in: path
          name: namespace
          description: 'Namespace that you want to use, for example, cluster-namespace-1.'
          required: true
          type: string
        - name: COOKIE
          in: header
          description: 'Authorization: Bearer {ACCESS_TOKEN} ; ACCESS_TOKEN is the user access token.'
          type: string
          required: true
      responses:
        '200':
          description: Success
        '403':
          description: Access forbidden
        '404':
          description: Resource not found
        '500':
          description: Internal service error
        '503':
          description: Service unavailable
definitions:
  Cluster:
    type: object
    required:
      - apiVersion
      - kind
      - metadata
      - spec
    properties:
      apiVersion:
        type: string
      kind:
        type: string
      metadata:
        type: object
      spec:
        type: object
        properties:
          KubernetesAPIEndpoints:
            type: object
            properties:
              ServerEndpoints:
                type: array
                items:
                  type: object
                  properties:
                    ClientCIDR:
                      type: string
                    ServerAddress:
                      type: string
              CABundle:
                type: string
                format: byte
          AuthInfo:
            type: object
            properties:
              User:
                type: object
                properties:
                  Kind: 
                    type: string
                  Name:
                    type: string
                  Namespace:
                    type: string
              Controller:
                type: object
                properties:
                  Kind: 
                    type: string
                  Name:
                    type: string
                  Namespace:
                    type: string
    example:
      apiVersion: clusterregistry.k8s.io/v1alpha1
      kind: Cluster
      metadata:
        labels:
         vendor: OpenShift
        name: cluster1
        namespace: cluster-namespace-1
      spec:
        authInfo: {}
        kubernetesApiEndpoints:
          serverEndpoints:
          - clientCIDR: 0.0.0.0/0
            serverAddress: 127.0.0.1:6443
      status: {}
externalDocs:
  description: Find out more about Swagger.
  url: 'http://swagger.io'
